@page "/EventPage/{EventId}"
@using BlazorMeetup.Data
@inject UserManager<Attendee> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject MeetupService MeetupService
@inject UserManager<Attendee> UserManager
@inject NavigationManager NavigationManager


<CascadingValue Value="this">
    <TabControl>
        <TabPage Text="Main">
            <h3 class="mx-2">Event Details</h3>
            @CurrentEvent.DateAndTime
            <h3 class="mt-4 font-medium">Attendees</h3>
            @foreach (AttendeeEvent ae in CurrentEvent.Attendees)
            {
                if (ae.Attendee.AvatarSettings != null)
                {
                    @if (ae.AttendeeId == DbUserId)
                    {

                        <div class="attendees" @key="ae.Id">
                            <div class="avatar"
                    style="background-image: url(@ae.Attendee.AvatarSettings.AvatarUrl); background-size: @(ae.Attendee.AvatarSettings.Size + "%"); background-position: @(ae.Attendee.AvatarSettings.Left + "%") @(ae.Attendee.AvatarSettings.Top + "%");">
                            </div>
                            <div>@ae.Attendee.UserName</div>
                            <div style="display:inline" @onclick="Leave">leave</div>
                        </div>

                    }
                    else
                    {
                        <div class="attendees" @key="ae.Id">
                            <div class="avatar"
                    style="background-image: url(@ae.Attendee.AvatarSettings.AvatarUrl); background-size: @(ae.Attendee.AvatarSettings.Size + "%"); background-position: @(ae.Attendee.AvatarSettings.Left + "%") @(ae.Attendee.AvatarSettings.Top + "%");">
                            </div>
                            <div>@ae.Attendee.UserName</div>
                        </div>

                    }
                }
            }
            <div class="mt-7">
                @if (!MeetupService.AttendeeEventExists(DbUserId, EventId))
                {
                    <button @onclick="() => JoinEvent()">I'll go at this date and time</button>
                }

            </div>
        </TabPage>

        <TabPage Text="Suggest a time for available dates">
            <SuggestDate />
        </TabPage>

        @if (DbUserId == CurrentEvent.AttendeeId)
        {
            <TabPage Text="Assign User To Teams">
                <AssignTeams EventId=@EventId />
            </TabPage>
        }
        else
        {
            <TabPage Text="See who is on which team">
                <ShowTeams />
            </TabPage>
        }
    </TabControl>
</CascadingValue>
@code {


    [CascadingParameter(Name = "DbUserId")]
    public string DbUserId { get; set; }
    [Parameter]
    public string EventId { get; set; }
    public Event CurrentEvent { get; set; }


    protected override void OnParametersSet()
    {
        CurrentEvent = MeetupService.GetEventById(EventId);
    }

    void JoinEvent()
    {
        MeetupService.JoinEvent(DbUserId, EventId);
        CurrentEvent = MeetupService.GetEventById(EventId);
        StateHasChanged();
    }

    void Leave()
    {
        MeetupService.LeaveEvent(DbUserId, EventId);
        CurrentEvent = MeetupService.GetEventById(EventId);
        StateHasChanged();
    }

}
