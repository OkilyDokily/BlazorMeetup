<CascadingValue Value="this" >
    <div class="btn-group" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            <button type="button" class="@IsBtn(tabPage) @GetButtonClass(tabPage)" @onclick=@Clickable(tabPage)>
                @tabPage.Text
            </button>
        }
    </div>
    @ChildContent
</CascadingValue>
@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool ButtonsWork { get; set; } = true;
    public TabPage ActivePage { get; set; }

    List<TabPage> Pages = new List<TabPage>();
    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }
    string IsBtn(TabPage page)
    {
        return ButtonsWork ? "btn" : "";
    }

    string GetButtonClass(TabPage page)
    {
        if (!ButtonsWork) return "";
        return page == ActivePage ? "btn-primary" : "btn-secondary";
    }
    public void ActivatePage(TabPage page)
    {
        ActivePage = page;
        Debug.WriteLine(page.Text + " page Text adsfasdfasdfas");
        StateHasChanged();
    }

    public Action Clickable(TabPage tabPage)
    {
        if (ButtonsWork)
        {
            return () => ActivatePage(tabPage);
        }
        else
        {
            return ()=> { } ;
        }
    }
}
@*https://blazor-university.com/templating-components-with-renderfragements/creating-a-tabcontrol/*@