@inject MeetupService MeetupService

<h3>DateRange</h3>

<EditForm Model="@rd" OnValidSubmit="@OnSubmit">
    <div>
        <label>Add Restricted Date</label>
        <InputDate type="Date" @bind-Value="rd.Date"/>
    </div>
    <button>Add</button>
</EditForm>

@foreach(RestrictDate rd in ParentEvent.RestrictDates)
{
    <div>@rd.Date</div>
    <button @onclick="()=>AddTimesToDate(rd.Id)">Add Times to this date</button>
}

@code {
    [Parameter]
    public EventCallback UpdateEvent { get; set; }
    [Parameter]
    public EventCallback<string> OpenTime { get; set; }
    [Parameter]
    public Event ParentEvent { get; set; }
    RestrictDate rd { get; set; }

    protected override void OnInitialized()
    {
        rd = new RestrictDate();
        rd.Date = DateTime.Today;
        rd.EventId = ParentEvent.Id;
    }

    async void AddTimesToDate(string id)
    {
        await OpenTime.InvokeAsync(id);
    }

    async void OnSubmit()
    {
        MeetupService.AddRestrictDate(rd);
        rd = new RestrictDate();
        rd.Date = DateTime.Today;
        rd.EventId = ParentEvent.Id;
        await UpdateEvent.InvokeAsync();
        StateHasChanged();
    }

}
