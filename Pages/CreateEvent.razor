@attribute [Authorize]
@inject MeetupService MeetupService
@using BlazorMeetup.Data
@using System.Security.Claims

<CascadingValue Value="this" Name="CreateEventAcc">
    <h3>Create Event</h3>

    <TabControl @ref="@TabControlRef">

        <TabPage Text=@((EventId == "") ? "Main >>" : "Edit >>")>
            <Main ParentEvent="@Created" TabControlAcc=@TabControlRef />
        </TabPage>

        <TabPage Text="Date Range >>">
            <DateRange ParentEvent="@Created" TabControlAcc=@TabControlRef />
        </TabPage>

        <TabPage Text="Time Range">
            <TimeRange RestrictDateId="@RestrictDateId" TabControlAcc=@TabControlRef />
        </TabPage>
    </TabControl>
</CascadingValue>


@code {
    [Parameter]
    public string EventId { get; set; }
    public Event Created { get; set; }
    ClaimsPrincipal User { get; set; }

    public TabControl TabControlRef;
    public string RestrictDateId { get; set; }

    [Parameter]
    public bool CreateEventIsActive { get; set; }
    public void UpdateCreated()
    {
        EventId = Created.Id;

        Created = MeetupService.GetEventById(Created.Id);
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            TabControlRef.Pages.ForEach(x => x.IsClickable = false);

            TabControlRef.EnableClickByString("Edit >>");
            TabControlRef.EnableClickByString("Main >>");

            if (EventId != "")
            {
                Event e = MeetupService.GetEventById(EventId);

                if (e != null)
                {
                    Created = e;
                    TabControlRef.EnableClickByString("Date Range >>");

                }
            }
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        if (EventId == "")
        {
            Created = new Event();

        }
        else
        {
            Created = MeetupService.GetEventById(EventId);
        }

    }
}
