@inject MeetupService MeetupService;
@inject IJSRuntime IJSRunTime

<EditForm Model="@ParentEvent" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-item">
        <label>Description</label>
        <InputText @bind-Value="ParentEvent.Description" />
    </div>
    <div class="form-item">
        <label>Maximum Attendees</label>
        <InputNumber @bind-Value="ParentEvent.MaximumAttendees" />
    </div>
    <div class="form-item">
        <label>Minimum Attendees</label>
        <InputNumber @bind-Value="ParentEvent.MinimumAttendees" />
    </div>
    <div class="form-item">
        <label>Date of Event</label>
        <InputDate @bind-Value="ParentEvent.DateAndTime" />
    </div>
    <div>
        <InputSelect @bind-Value="ParentEvent.ServerId">
            @foreach (Server s in servers)
            {
                <option value=@s.Id>@s.Name</option>
            }
        </InputSelect>
    </div>

    <button>Create Event</button>
</EditForm>
@code {

    [Parameter]
    public bool EditMode { get; set; }
    [Parameter]
    public Event ParentEvent { get; set; }
    [CascadingParameter(Name = "DbUserId")]
    public string DbUserId { get; set; }
    [CascadingParameter(Name = "CreateEventAcc")]
    public CreateEvent CreateEventAcc { get; set; }
    [Parameter]
    public TabControl TabControlAcc { get; set; }
    public List<Server> servers { get; set; }


    protected override void OnParametersSet()
    {
        servers = MeetupService.GetServersByUserId(DbUserId);
        if (servers.Count > 0)
        {
            ParentEvent.ServerId = servers.FirstOrDefault().Id;
        }
        StateHasChanged();
        base.OnParametersSet();
    }


    private void HandleValidSubmit()
    {

        MeetupService.CreateEvent(ParentEvent);
        if (EditMode = true)
        {
            IJSRunTime.CreateMessage("You've successfully created a new event.");
        }
        else
        {
            IJSRunTime.CreateMessage("You've successfully edited an event.");
        }

        CreateEventAcc.EditMode = true;
        CreateEventAcc.UpdateCreated();

        TabControlAcc.ActivatePageByText("Date Range >>");
        TabControlAcc.EnableClickByString("Main >>");
        TabControlAcc.EnableClickByString("Date Range >>");
        StateHasChanged();



    }
}
