@page "/"
@using System.Security.Claims;
@using System.Diagnostics
@using Microsoft.AspNetCore.Identity;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

<h1>Hello, world!</h1>

Welcome to your new app.
<AuthorizeView>
    <Authorized>
        <a href="#">Hello, @context.User.Identity.Name!</a>
        <p></p>
        <a href="Identity/Account/Logout">Log out</a>
        <img src=@avatar>
  

    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
    <Authorized>
        <a href="#">Hello, @context.User.Identity.Name!</a>
        <p></p>
        <a href="Identity/Account/Logout">Log out</a>
        <img src=@avatar>
  
    </Authorized>
</AuthorizeView>


@code {

    string avatar;
    ClaimsPrincipal User { get; set; }
    List<Claim> Claims { get; set; }
    IdentityUser DbUser { get; set; }
    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        User = authState.User;

        if (User.Identity.IsAuthenticated)
        {

            DbUser = await UserManager.GetUserAsync(User);
     
        
        }

        avatar = User.FindFirstValue("urn:discord:avatar:url");


    }
}